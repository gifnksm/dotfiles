#!/bin/bash
# shellcheck source-path=SCRIPTDIR/..

set -eu -o pipefail

if [[ "$(pwd)" != "$(realpath "$(dirname "${BASH_SOURCE[0]}")/..")" ]]; then
    cd "$(dirname "${BASH_SOURCE[0]}")/.."
    exec ./scripts/"$(basename "${BASH_SOURCE[0]}")" "$@" # to update BASH_SOURCE, etc.
fi
source ./lib/common.bash
is_executed && return

parse_args "$@"

group_start_file
{
    install_package_by_spec <<END
        arch: git
        ubuntu-22.04: git
        rocky-9: git
END

    assert_command git

    ensure_git_config_added include.path ~/.config/git/config.d/index

    ensure_git_config_included base.conf

    # detect virtual environment
    if command -v systemd-detect-virt >/dev/null; then
        virt="$(systemd-detect-virt)"
    elif [[ -e ~/.dockerenv ]]; then
        virt=docker
    elif grep -qE "(Microsoft|WSL)" /proc/version; then
        virt=wsl
    else
        virt=unknown
    fi

    if [[ "${virt}" = "wsl" ]]; then
        ensure_git_config_included wsl.conf
    fi

    ensure_line_in_file ".vscode/" ~/.config/git/ignore

    # remove old settings
    ensure_git_config_unset pull.ff only
    ensure_git_config_unset core.excludesfile ~/.config/git/ignore
    ensure_git_config_unset credential.helper "/mnt/c/Program\ Files/Git/mingw64/bin/git-credential-manager.exe"
    ensure_git_config_unset credential.helper "/mnt/c/Program\ Files/Git/mingw64/bin/git-credential-manager-core.exe"
    ensure_git_config_unset credential.helper "/mnt/c/Program\ Files/Git/mingw64/libexec/git-core/git-credential-manager-core.exe"

    # initialize git repository if needed
    if ! [[ -d .git ]]; then
        info "Initializing git repository"
        git init
        git remote add origin https://github.com/gifnksm/dotfiles.git
        git fetch --depth 1 origin
        git reset --mixed origin/master
    fi
}
group_end
