#!/usr/bin/env perl
use strict;
use warnings;
use MIME::Base64;
use Encode;
use constant TMUXLEN => 250;
use constant SCREENLEN => 510;
binmode STDIN, ':encoding(utf8)';

# reference:
# http://article.gmane.org/gmane.comp.terminal-emulators.tmux.user/6453
# http://sanrinsha.lolipop.jp/blog/2013/01/10618.html

my $input = do {
  local $/;
  <STDIN>;
};

# copy to tmux if possible
if ($ENV{TMUX}) {
  my @command = ("tmux", "set-buffer", $input);
  system @command;
}

$input =~ s/ \n+ \z//xsm;
$input =~ s/\n/\r\n/g;
$input = encode_base64( encode('utf-8', $input), q{} );
#$input = encode_base64( encode('cp932', $input), q{} );

if ($ENV{TMUX}) {
  print "\ePtmux;\e\e]52;c;$input\a\e\\";

  # print "\ePtmux;\e\e]52;c;\e\\";
  # # 分割して送信
  # for(my $i = 0, my $len = length($input); TMUXLEN * $i < $len; $i++) {
  #   my $str = substr($input, TMUXLEN * $i, TMUXLEN);
  #   print "\ePtmux;$str\e\\";
  # }
  # print "\ePtmux;\e\a\e\\";
} elsif ($ENV{TERM} eq 'screen') {
  print "\eP\e]52;;\e\\";
  for (my $i = 0, my $len = length($input); SCREENLEN * $i < $len; $i++) {
    my $str = substr($input, SCREENLEN * $i, SCREENLEN);
    print "\eP$str\e\\";
  }
  print "\eP\x07\e\\";
} else {
  print "\e]52;;$input\e\\";
}

