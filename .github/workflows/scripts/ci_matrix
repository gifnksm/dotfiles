#!/bin/bash

set -euo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")/../../.."

pretty_os() {
    case "${1}" in
    arch) echo "arch" ;;
    ubuntu_22_04) echo "ubuntu-22.04" ;;
    debian_11) echo "debian-11" ;;
    rocky_9) echo "rocky-9" ;;
    *) echo "${1}" ;;
    esac
}

main() {
    local -a test_files
    readarray -t test_files < <(find test -type f -executable | sort)

    local -a profiles=()
    readarray -t profiles < <(./install --list-profiles)
    local -a modules=()
    readarray -t modules < <(./install --list-modules)

    if [[ "${#profiles[@]}" -eq 0 ]]; then
        echo "profiles not found" >&2
        exit 1
    fi

    if [[ "${#modules[@]}" -eq 0 ]]; then
        echo "modules not found" >&2
        exit 1
    fi

    {
        echo '['
        local test_file
        for test_file in "${test_files[@]}"; do
            if [[ "${test_file}" != "${test_files[0]}" ]]; then
                echo ","
            fi
            local name
            name="$(basename "${test_file}")"
            name="${name##test_}"
            if [[ "${name}" =~ ^install_normal ]]; then
                local os="${name##install_normal_}"
                os="$(pretty_os "${os}")"
                local profile
                for profile in "${profiles[@]}"; do
                    if [[ "${profile}" != "${profiles[0]}" ]]; then
                        echo ","
                    fi
                    cat <<END
                        {
                            "name": "install [normal] %${profile} - ${os}",
                            "command": "./${test_file} --profile ${profile}"
                        }
END
                done
                local module
                for module in "${modules[@]}"; do
                    echo ","
                    cat <<END
                        {
                            "name": "install [normal] ${module} - ${os}",
                            "command": "./${test_file} ${module} --profile none"
                        }
END
                done
            elif [[ "${name}" =~ ^install_dry_run_ ]]; then
                local os="${name##install_dry_run_}"
                os="$(pretty_os "${os}")"
                cat <<END
                    {
                        "name": "install [dry-run] %full - ${os}",
                        "command": "./${test_file} --profile full"
                    }
END
            elif [[ "${name}" =~ ^bootstrap_ ]]; then
                local os="${name##bootstrap_}"
                os="$(pretty_os "${os}")"
                cat <<END
                    {
                        "name": "bootstrap - ${os}",
                        "command": "./${test_file}"
                    }
END
            else
                cat <<END
                    {
                        "name": "${name}",
                        "command": "./${test_file}"
                    }
END
            fi
        done
        echo ']'
    } | jq --compact-output 'sort_by(.name)'
}

main "$@"
